# To get started with security, check out the documentation:
# http://symfony.com/doc/current/security.html
security:

    # http://symfony.com/doc/current/security.html#b-configuring-how-users-are-loaded
    providers:
        in_memory:
            memory:     
                #users:
                    #yassine:        
                        #password: #yassine
                                #$2y$12$BnRHDeuu.AnSvm3S8RIskeTopvYPB3DSv23ihjB2tABtqz8qReCW2
                        #roles: 'ROLE_ADMIN'
        foggyline_customer:
                entity:
                    class: FoggylineCustomerBundle:Customer
                    property: username
        foggyline_user:
                entity:
                    class: FoggylineUserBundle:User
                    property: username
   
       

                    
    encoders:
        Symfony\Component\Security\Core\User\User:
            algorithm: bcrypt
           # cost: 12
        Foggyline\CustomerBundle\Entity\Customer:
            algorithm: bcrypt
            cost: 12
        Foggyline\UserBundle\Entity\User:
            algorithm: bcrypt
            cost: 12
    
    firewalls:

        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        foggyline_user:
            pattern: ^/(user|store_manager|category|product|catalog)
            anonymous: ~
            provider: foggyline_user
            form_login:
                login_path: user_login
                check_path: user_login
                #context:  false
            logout:
                path: /user/logout
                target: /
                
        foggyline_customer:
            pattern: ^/
            anonymous: ~
            provider: foggyline_customer
            form_login:
                login_path: foggyline_customer_login
                check_path: foggyline_customer_login
                default_target_path: customer_account
                #context:  false
            logout:
                path:   /customer/logout
                target: /
                
  

        #main:
            #anonymous: ~
    
    access_control:
        #user/1/edit
       #- {path:  /new, roles: ROLE_USER}
       #- {path:  /edit, roles: ROLE_USER}
       #- {path:  /, roles: ROLE_USER, methods: [DELETE] }
       #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
       #- { path: ^/register, roles: IS_AUTHENTICATED_ANONYMOUSLY } 
       #- { path: ^/, roles:  IS_AUTHENTICATED_FULLY }
       #- { path: user/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
       #- { path: user/logout, roles: ROLE_USER }    
       #- {path:  /new, roles: ROLE_ADMIN}
       #- {path:  /edit, roles: ROLE_ADMIN}
       # Custumer #
       #- {path:  /, roles: ROLE_ADMIN, methods: [DELETE] }   
       #- { path: customer/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
       #- { path: customer/register, roles: IS_AUTHENTICATED_ANONYMOUSLY }
       #- { path: customer/forgotten_password, roles: IS_AUTHENTICATED_ANONYMOUSLY }
       #- { path: customer/account, roles: ROLE_USER }
       #- { path: customer/logout, roles: ROLE_USER }

       #   Test #

        - { path: /new, roles: ROLE_ADMIN }
        - { path: /edit, roles: ROLE_ADMIN }   
        - { path: /fetch, roles: ROLE_ADMIN }
        - { path: /edit, roles: ROLE_USER }
        - { path: /, roles: ROLE_USER, methods: [DELETE] }
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, roles: IS_AUTHENTICATED_ANONYMOUSLY } 
        #- { path: ^/, roles:  IS_AUTHENTICATED_FULLY }
        - {path:  /, roles: ROLE_ADMIN, methods: [DELETE] }   
        - { path: customer/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: customer/register, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: customer/forgotten_password, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: customer/account, roles: ROLE_USER }
        - { path: customer/logout, roles: ROLE_USER }